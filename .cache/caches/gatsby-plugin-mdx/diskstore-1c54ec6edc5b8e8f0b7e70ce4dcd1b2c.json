{"expireTime":9007200888121411000,"key":"gatsby-plugin-mdx-entire-payload-35c4525aa5c15760ebb17500115fb438--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"I love me some internet nostalgia and ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":39,"offset":39},"indent":[]}},{"type":"link","title":null,"url":"https://jdan.github.io/98.css/","children":[{"type":"text","value":"98.css","position":{"start":{"line":2,"column":40,"offset":40},"end":{"line":2,"column":46,"offset":46},"indent":[]}}],"position":{"start":{"line":2,"column":39,"offset":39},"end":{"line":2,"column":79,"offset":79},"indent":[]}},{"type":"text","value":" does not disappoint.","position":{"start":{"line":2,"column":79,"offset":79},"end":{"line":2,"column":100,"offset":100},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":100,"offset":100},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"98.css is a CSS library for building interfaces that look like Windows 98.","position":{"start":{"line":4,"column":3,"offset":104},"end":{"line":4,"column":77,"offset":178},"indent":[]}}],"position":{"start":{"line":4,"column":3,"offset":104},"end":{"line":4,"column":77,"offset":178},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":102},"end":{"line":4,"column":77,"offset":178},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A pretty damn faithful recreation of the UI that sent me online curiously building my first web pages, Winamp skins, Visual Basic programs, and pirated copies of PhotoShop.","position":{"start":{"line":6,"column":1,"offset":180},"end":{"line":6,"column":173,"offset":352},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":180},"end":{"line":6,"column":173,"offset":352},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"date\":\"2020-07-08T00:21\",\"title\":\"2020-07-08T00:21\",\"tags\":[\"microblog\"]}","position":{"start":{"line":9,"column":1,"offset":355},"end":{"line":9,"column":104,"offset":458},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":104,"offset":458}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-07-08T00:21\",\n  \"title\": \"2020-07-08T00:21\",\n  \"tags\": [\"microblog\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I love me some internet nostalgia and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://jdan.github.io/98.css/\"\n  }, \"98.css\"), \" does not disappoint.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"98.css is a CSS library for building interfaces that look like Windows 98.\")), mdx(\"p\", null, \"A pretty damn faithful recreation of the UI that sent me online curiously building my first web pages, Winamp skins, Visual Basic programs, and pirated copies of PhotoShop.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"date\": \"2020-07-08T00:21\",\n  \"title\": \"2020-07-08T00:21\",\n  \"tags\": [\"microblog\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`I love me some internet nostalgia and `}<a parentName=\"p\" {...{\n        \"href\": \"https://jdan.github.io/98.css/\"\n      }}>{`98.css`}</a>{` does not disappoint.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`98.css is a CSS library for building interfaces that look like Windows 98.`}</p>\n    </blockquote>\n    <p>{`A pretty damn faithful recreation of the UI that sent me online curiously building my first web pages, Winamp skins, Visual Basic programs, and pirated copies of PhotoShop.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}