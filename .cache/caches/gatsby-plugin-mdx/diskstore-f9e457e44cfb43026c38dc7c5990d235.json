{"expireTime":9007200888121411000,"key":"gatsby-plugin-mdx-entire-payload-0ee80e9a585a6f530fb58684b6895715--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"I am very excited to hear that ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":32,"offset":32},"indent":[]}},{"type":"link","title":null,"url":"https://ranchero.com/netnewswire/","children":[{"type":"text","value":"NetNewsWire","position":{"start":{"line":2,"column":33,"offset":33},"end":{"line":2,"column":44,"offset":44},"indent":[]}}],"position":{"start":{"line":2,"column":32,"offset":32},"end":{"line":2,"column":80,"offset":80},"indent":[]}},{"type":"text","value":" (my RSS reader of choice) is going to get iCloud syncing support! That was literally the only wishlist feature that I had for this app. Maurice Parker, a developer on the project ","position":{"start":{"line":2,"column":80,"offset":80},"end":{"line":2,"column":260,"offset":260},"indent":[]}},{"type":"link","title":null,"url":"https://vincode.io/2020/04/09/cloudkit-impressions-from.html","children":[{"type":"text","value":"wrote a nice piece about building the feature","position":{"start":{"line":2,"column":261,"offset":261},"end":{"line":2,"column":306,"offset":306},"indent":[]}}],"position":{"start":{"line":2,"column":260,"offset":260},"end":{"line":2,"column":369,"offset":369},"indent":[]}},{"type":"text","value":" and his impressions of CloudKit in general.","position":{"start":{"line":2,"column":369,"offset":369},"end":{"line":2,"column":413,"offset":413},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":413,"offset":413},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ht @manton","position":{"start":{"line":4,"column":1,"offset":415},"end":{"line":4,"column":11,"offset":425},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":415},"end":{"line":4,"column":11,"offset":425},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"date\":\"2020-04-10T03:44\",\"title\":\"2020-04-10T03:44\",\"tags\":[\"microblog\"]}","position":{"start":{"line":7,"column":1,"offset":428},"end":{"line":7,"column":104,"offset":531},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":7,"column":104,"offset":531}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"date\": \"2020-04-10T03:44\",\n  \"title\": \"2020-04-10T03:44\",\n  \"tags\": [\"microblog\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I am very excited to hear that \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://ranchero.com/netnewswire/\"\n  }, \"NetNewsWire\"), \" (my RSS reader of choice) is going to get iCloud syncing support! That was literally the only wishlist feature that I had for this app. Maurice Parker, a developer on the project \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://vincode.io/2020/04/09/cloudkit-impressions-from.html\"\n  }, \"wrote a nice piece about building the feature\"), \" and his impressions of CloudKit in general.\"), mdx(\"p\", null, \"ht @manton\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"date\": \"2020-04-10T03:44\",\n  \"title\": \"2020-04-10T03:44\",\n  \"tags\": [\"microblog\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`I am very excited to hear that `}<a parentName=\"p\" {...{\n        \"href\": \"https://ranchero.com/netnewswire/\"\n      }}>{`NetNewsWire`}</a>{` (my RSS reader of choice) is going to get iCloud syncing support! That was literally the only wishlist feature that I had for this app. Maurice Parker, a developer on the project `}<a parentName=\"p\" {...{\n        \"href\": \"https://vincode.io/2020/04/09/cloudkit-impressions-from.html\"\n      }}>{`wrote a nice piece about building the feature`}</a>{` and his impressions of CloudKit in general.`}</p>\n    <p>{`ht @manton`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}